<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <UserSecretsId>b15a0724-a81c-4baf-86b6-53aedc3ca7ee</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Aspire.Npgsql.EntityFrameworkCore.PostgreSQL" Version="9.5.1" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="9.0.10" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="9.0.10" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="9.0.10">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.22.1" />
    <PackageReference Include="Scalar.AspNetCore" Version="2.9.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\JasperDocs.ServiceDefaults\JasperDocs.ServiceDefaults.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Infrastructure\Migrations\" />
  </ItemGroup>

  <!-- Build React frontend before building the API (only in Release mode) -->
  <Target Name="BuildReactApp" BeforeTargets="Build" Condition="'$(Configuration)' == 'Release'">
    <Message Text="Building React frontend..." Importance="high" />

    <!-- Install dependencies if node_modules doesn't exist -->
    <Exec Command="npm install"
          WorkingDirectory="$(MSBuildThisFileDirectory)../JasperDocs.WebApp"
          Condition="!Exists('$(MSBuildThisFileDirectory)../JasperDocs.WebApp/node_modules')" />

    <!-- Build React app (outputs directly to wwwroot via vite.config.ts) -->
    <Exec Command="npm run build"
          WorkingDirectory="$(MSBuildThisFileDirectory)../JasperDocs.WebApp" />
  </Target>

</Project>
