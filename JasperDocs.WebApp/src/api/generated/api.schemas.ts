/**
 * Generated by orval v7.14.0 üç∫
 * Do not edit manually.
 * JasperDocs.WebApi | v1
 * OpenAPI spec version: 1.0.0
 */
export interface AccessTokenResponse {
  /** @nullable */
  tokenType?: string | null;
  accessToken: string;
  expiresIn: number;
  refreshToken: string;
}

export interface CreateDocument {
  title: string;
  /** @nullable */
  description?: string | null;
}

export interface ForgotPasswordRequest {
  email: string;
}

export type HttpValidationProblemDetailsErrors = {[key: string]: string[]};

export interface HttpValidationProblemDetails {
  /** @nullable */
  type?: string | null;
  /** @nullable */
  title?: string | null;
  /** @nullable */
  status?: number | null;
  /** @nullable */
  detail?: string | null;
  /** @nullable */
  instance?: string | null;
  errors?: HttpValidationProblemDetailsErrors;
}

export interface InfoRequest {
  /** @nullable */
  newEmail?: string | null;
  /** @nullable */
  newPassword?: string | null;
  /** @nullable */
  oldPassword?: string | null;
}

export interface InfoResponse {
  email: string;
  isEmailConfirmed: boolean;
}

export interface LoginRequest {
  email: string;
  password: string;
  /** @nullable */
  twoFactorCode?: string | null;
  /** @nullable */
  twoFactorRecoveryCode?: string | null;
}

export interface RefreshRequest {
  refreshToken: string;
}

export interface RegisterRequest {
  email: string;
  password: string;
}

export interface ResendConfirmationEmailRequest {
  email: string;
}

export interface ResetPasswordRequest {
  email: string;
  resetCode: string;
  newPassword: string;
}

export interface TwoFactorRequest {
  /** @nullable */
  enable?: boolean | null;
  /** @nullable */
  twoFactorCode?: string | null;
  resetSharedKey?: boolean;
  resetRecoveryCodes?: boolean;
  forgetMachine?: boolean;
}

export interface TwoFactorResponse {
  sharedKey: string;
  recoveryCodesLeft: number;
  /** @nullable */
  recoveryCodes?: string[] | null;
  isTwoFactorEnabled: boolean;
  isMachineRemembered: boolean;
}

export interface WeatherForecast {
  date?: string;
  temperatureC?: number;
  temperatureF?: number;
  /** @nullable */
  summary?: string | null;
}

export type PostLoginParams = {
useCookies?: boolean;
useSessionCookies?: boolean;
};

export type MapIdentityApiConfirmEmailParams = {
userId: string;
code: string;
changedEmail?: string;
};

